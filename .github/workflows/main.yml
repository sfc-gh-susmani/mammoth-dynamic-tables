# Name the GitHub Action
name: Deploy NGA Imagery Intelligence App via Snowflake CLI

on:
  push:
    branches:
    - main
  workflow_dispatch:  # Allow manual trigger

env:
  PYTHON_VERSION: '3.9'

jobs:
  build-and-deploy:
    runs-on: self-hosted
    environment: production
    steps:
    # Checks out your repository under $GITHUB_WORKSPACE, so your workflow can access it
    - name: 'Checkout GitHub Action'
      uses: actions/checkout@v3

    - name: 'Verify Python and Snowflake CLI'
      shell: bash
      run: |
        echo "🐍 Python version:"
        python3 --version
        echo "❄️ Snowflake CLI status:"
        if command -v snow &> /dev/null; then
          snow --version
          echo "✅ Snowflake CLI is already installed"
        else
          echo "📦 Installing Snowflake CLI..."
          python3 -m pip install --upgrade pip
          pip3 install snowflake-cli
        fi

    - name: 'Create config'
      shell: bash
      env:
        SNOWFLAKE_PASSWORD: ${{ secrets.SNOWCLI_PW }}
      run: |
        mkdir -p ~/.snowflake
        cp config.toml ~/.snowflake/config.toml
        # Replace password using Python (safest for special characters)
        python3 -c "
import os
config_path = os.path.expanduser('~/.snowflake/config.toml')
password = os.environ['SNOWFLAKE_PASSWORD']
with open(config_path, 'r') as f:
    content = f.read()
content = content.replace('PLACEHOLDER_PASSWORD', password)
with open(config_path, 'w') as f:
    f.write(content)
"
        chmod 0600 ~/.snowflake/config.toml

    - name: 'Deploy the Streamlit app'
      shell: bash
      run: |
        snow streamlit deploy --replace

    - name: 'Get Streamlit app URL'
      shell: bash
      run: |
        snow streamlit get-url nga_imagery_intelligence_app

    - name: 'Deployment Success Notification'
      shell: bash
      run: |
        echo "🎉 NGA Imagery Intelligence App deployed successfully!"
        echo "✅ Streamlit app is now live in Snowflake"
        echo "🔗 Access via Snowsight > Apps > Streamlit" 